spring:
  application:
    name: batch-processor

  # Run as non-web application (no web server needed for batch processing)
  main:
    web-application-type: none

  # Use same MySQL as main app but different schema for batch processing
  datasource:
    url: jdbc:mysql://172.23.207.87:3306/gest-form-batch?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: root
    password: hello!
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update # Auto-create batch processing tables
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    show-sql: true

  sql:
    init:
      mode: always
      platform: mysql

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: gest-form-batch

  batch:
    job:
      enabled: false # Disable automatic job execution on startup
    jdbc:
      initialize-schema: never # Let Liquibase handle the schema

# No web server needed for batch processing
# server:
#   port: 8082

# Enhanced Logging for Development (adapted from main app)
logging:
  level:
    liquibase: DEBUG
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
    com.example.batchprocessor: DEBUG
    org.springframework.batch: INFO
    org.springframework.jdbc: DEBUG
    web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Management endpoints for monitoring (disabled for non-web app)
# management:
#   endpoints:
#     web:
#       exposure:
#         include: health,info,metrics

# Custom application properties
app:
  csv:
    input-folder: input
    processed-folder: processed
    error-folder: error
  output:
    json-folder: output
    processed-json-folder: output/processed
